(setq cnt 0)
(setq n 10000000)
(setq is_prime (make-vector (+ n 1) 't))
(setq prime (make-vector (+ n 1) 0))
(setq e 0)
(setq l 0)
(setq i 0)

(aset is_prime 1 nil)
(dotimes (e (- n 1))
  (setq i (+ e 2))
  (if (aref is_prime i)
      (progn (aset prime cnt i)
             (setq cnt (+ cnt 1))))
  (catch 'break
    (dotimes (l cnt)
      (if (> (* i (aref prime l)) n)
	  (throw 'break nil))
      (aset is_prime (* i (aref prime l)) nil)
      (if (eql (% i (aref prime l)) 0)
	  (throw 'break nil)))))

(princ "Total prime numbers: ")
(princ cnt)
(princ "\n")
